// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`#generateInterfaces should generate and use definitions interface 1`] = `
"/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated. DO NOT MODIFY IT BY HAND.
 * Instead, modify the corresponding JSONSchema file and regenerate the types.
 */

import { RouteHandler } from "fastify"

export const schema = {
  "body": {
    "type": "object",
    "properties": {
      "$ref": "#/definitions/payload/properties"
    }
  },
  "headers": {
    "type": "object",
    "properties": {
      "$ref": "#/definitions/payload/properties"
    }
  },
  "params": {
    "type": "object",
    "properties": {
      "$ref": "#/definitions/payload/properties"
    }
  },
  "query": {
    "type": "object",
    "properties": {
      "$ref": "#/definitions/payload/properties"
    }
  },
  "response": {
    "200": {
      "type": "object",
      "properties": {
        "$ref": "#/definitions/payload/properties"
      }
    }
  },
  "definitions": {
    "payload": {
      "properties": {
        "test": {
          "type": "boolean"
        }
      }
    }
  }
}

export interface Payload {
  test?: boolean;
}

export type Definitions = Payload
export interface Params {
  test?: boolean;
}

export interface Query {
  test?: boolean;
}

export interface Body {
  test?: boolean;
}

export interface Headers {
  test?: boolean;
}

export interface Reply200 {
  test?: boolean;
}

export type Reply = Reply200

export type RouteGeneric = {
  Querystring: Query;
  Body: Body;
  Params: Params;
  Headers: Headers;
  Reply: Reply;
}

export type Handler = RouteHandler<RouteGeneric>;"
`;

exports[`#generateInterfaces should generate body interface 1`] = `
"/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated. DO NOT MODIFY IT BY HAND.
 * Instead, modify the corresponding JSONSchema file and regenerate the types.
 */

import { RouteHandler } from "fastify"

export const schema = {
  "body": {
    "type": "object",
    "properties": {
      "test": {
        "type": "boolean"
      }
    }
  }
}

export type Definitions = {}
export interface Params {}

export interface Query {}

export interface Body {
  test?: boolean;
}

export interface Headers {}

export type Reply = {}

export type RouteGeneric = {
  Querystring: Query;
  Body: Body;
  Params: Params;
  Headers: Headers;
  Reply: Reply;
}

export type Handler = RouteHandler<RouteGeneric>;"
`;

exports[`#generateInterfaces should generate headers interface 1`] = `
"/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated. DO NOT MODIFY IT BY HAND.
 * Instead, modify the corresponding JSONSchema file and regenerate the types.
 */

import { RouteHandler } from "fastify"

export const schema = {
  "headers": {
    "type": "object",
    "properties": {
      "test": {
        "type": "boolean"
      }
    }
  }
}

export type Definitions = {}
export interface Params {}

export interface Query {}

export interface Body {}

export interface Headers {
  test?: boolean;
}

export type Reply = {}

export type RouteGeneric = {
  Querystring: Query;
  Body: Body;
  Params: Params;
  Headers: Headers;
  Reply: Reply;
}

export type Handler = RouteHandler<RouteGeneric>;"
`;

exports[`#generateInterfaces should generate params interface 1`] = `
"/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated. DO NOT MODIFY IT BY HAND.
 * Instead, modify the corresponding JSONSchema file and regenerate the types.
 */

import { RouteHandler } from "fastify"

export const schema = {
  "params": {
    "type": "object",
    "properties": {
      "test": {
        "type": "boolean"
      }
    }
  }
}

export type Definitions = {}
export interface Params {
  test?: boolean;
}

export interface Query {}

export interface Body {}

export interface Headers {}

export type Reply = {}

export type RouteGeneric = {
  Querystring: Query;
  Body: Body;
  Params: Params;
  Headers: Headers;
  Reply: Reply;
}

export type Handler = RouteHandler<RouteGeneric>;"
`;

exports[`#generateInterfaces should generate query interface 1`] = `
"/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated. DO NOT MODIFY IT BY HAND.
 * Instead, modify the corresponding JSONSchema file and regenerate the types.
 */

import { RouteHandler } from "fastify"

export const schema = {
  "query": {
    "type": "object",
    "properties": {
      "test": {
        "type": "boolean"
      }
    }
  }
}

export type Definitions = {}
export interface Params {}

export interface Query {
  test?: boolean;
}

export interface Body {}

export interface Headers {}

export type Reply = {}

export type RouteGeneric = {
  Querystring: Query;
  Body: Body;
  Params: Params;
  Headers: Headers;
  Reply: Reply;
}

export type Handler = RouteHandler<RouteGeneric>;"
`;

exports[`#generateInterfaces should generate query interface 2`] = `
"/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated. DO NOT MODIFY IT BY HAND.
 * Instead, modify the corresponding JSONSchema file and regenerate the types.
 */

import { RouteHandler } from "fastify"

export const schema = {
  "querystring": {
    "type": "object",
    "properties": {
      "test": {
        "type": "boolean"
      }
    }
  }
}

export type Definitions = {}
export interface Params {}

export interface Query {
  test?: boolean;
}

export interface Body {}

export interface Headers {}

export type Reply = {}

export type RouteGeneric = {
  Querystring: Query;
  Body: Body;
  Params: Params;
  Headers: Headers;
  Reply: Reply;
}

export type Handler = RouteHandler<RouteGeneric>;"
`;

exports[`#generateInterfaces should generate reply interface 1`] = `
"/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated. DO NOT MODIFY IT BY HAND.
 * Instead, modify the corresponding JSONSchema file and regenerate the types.
 */

import { RouteHandler } from "fastify"

export const schema = {
  "response": {
    "200": {
      "type": "object",
      "properties": {
        "test": {
          "type": "boolean"
        }
      }
    }
  }
}

export type Definitions = {}
export interface Params {}

export interface Query {}

export interface Body {}

export interface Headers {}

export interface Reply200 {
  test?: boolean;
}

export type Reply = Reply200

export type RouteGeneric = {
  Querystring: Query;
  Body: Body;
  Params: Params;
  Headers: Headers;
  Reply: Reply;
}

export type Handler = RouteHandler<RouteGeneric>;"
`;

exports[`#generateInterfaces should handle empty schema 1`] = `
"/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated. DO NOT MODIFY IT BY HAND.
 * Instead, modify the corresponding JSONSchema file and regenerate the types.
 */

import { RouteHandler } from "fastify"

export const schema = {}

export type Definitions = {}
export interface Params {}

export interface Query {}

export interface Body {}

export interface Headers {}

export type Reply = {}

export type RouteGeneric = {
  Querystring: Query;
  Body: Body;
  Params: Params;
  Headers: Headers;
  Reply: Reply;
}

export type Handler = RouteHandler<RouteGeneric>;"
`;

exports[`#generateInterfaces should handle incorrect json schema 1`] = `
"/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated. DO NOT MODIFY IT BY HAND.
 * Instead, modify the corresponding JSONSchema file and regenerate the types.
 */

import { RouteHandler } from "fastify"

export const schema = {
  "incorect": true
}

export type Definitions = {}
export interface Params {}

export interface Query {}

export interface Body {}

export interface Headers {}

export type Reply = {}

export type RouteGeneric = {
  Querystring: Query;
  Body: Body;
  Params: Params;
  Headers: Headers;
  Reply: Reply;
}

export type Handler = RouteHandler<RouteGeneric>;"
`;

exports[`#generateInterfaces should not generate interfaces from unkown keys 1`] = `
"/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated. DO NOT MODIFY IT BY HAND.
 * Instead, modify the corresponding JSONSchema file and regenerate the types.
 */

import { RouteHandler } from "fastify"

export const schema = {
  "unkown": {
    "properties": {
      "test": {
        "type": "string"
      }
    },
    "type": "object"
  }
}

export type Definitions = {}
export interface Params {}

export interface Query {}

export interface Body {}

export interface Headers {}

export type Reply = {}

export type RouteGeneric = {
  Querystring: Query;
  Body: Body;
  Params: Params;
  Headers: Headers;
  Reply: Reply;
}

export type Handler = RouteHandler<RouteGeneric>;"
`;
